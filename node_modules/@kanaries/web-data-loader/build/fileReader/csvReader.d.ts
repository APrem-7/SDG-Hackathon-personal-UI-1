import { DataSource } from "../globalTypes";
interface ReservoirSamplingConfig {
    type: 'reservoirSampling';
    /**
     * sample size(number of records left)
     */
    size: number;
}
declare type SamplingConfig = ReservoirSamplingConfig | false | undefined;
interface IcsvReaderProps {
    file: File;
    config?: SamplingConfig;
    encoding?: string;
    /**
     * loading process callback
     */
    onLoading?: (value: number) => void;
}
/**
 * csvReader. load, parse and sampling for csv file in stream.
 * @param file File Type
 * @param config
 * @param onLoading loading process callback
 */
export declare function csvReader(props: IcsvReaderProps): Promise<unknown>;
/**
 * table to json
 * @param fieldNames list of field name, normally the first row of csv.
 * @param rows data rows. the rest rows of csv.
 */
export declare function table2json(fieldNames: any[], rows: any[][]): DataSource;
export {};
